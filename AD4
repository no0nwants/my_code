import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.metrics import r2_score, mean_absolute_percentage_error

df = pd.read_csv('data.csv', sep=';', skipinitialspace=True, decimal=',')

df.columns = df.columns.str.lower().str.replace(" ", "_")
df = df.dropna()


def helpp(column):
    for el in df['порода'].unique():
        Q1 = df[df['порода'] == el][column].quantile(0.25)
        Q3 = df[df['порода'] == el][column].quantile(0.75)
        IQR = Q3 - Q1
        upper_bound = Q3 + 3 * IQR

        med = df[df['порода'] == el][column].median()
        # df[column] = np.where(
        #     (df[column] >= upper_bound), med, df[column])
        df.loc[(df['порода'] == el) & (df[column] > upper_bound), column] = med


helpp('удой')
helpp('жирность,%')

df['порода'] = df['порода'].apply(lambda x: 'РефлешнСоверинг' if x == 'РефлешнСоверинггггг' else x)
df['спо_кат'] = np.where(df['спо'] <= 0.9, 'low', 'high')

x = df[['протеин', 'эке', 'порода', 'спо_кат']]
y = df['удой']

column_transformer = ColumnTransformer(
    [('onehot', OneHotEncoder(), ['порода', 'спо_кат'])],
    remainder='passthrough'
)
x_trans = column_transformer.fit_transform(x)

x_train, x_test, y_train, y_test = train_test_split(x_trans, y, test_size=0.15, random_state=42)

model = LinearRegression()
model.fit(x_train, y_train)

y_pred = model.predict(x_test)

r2 = r2_score(y_test, y_pred)
mape = mean_absolute_percentage_error(y_test, y_pred) * 100

r2 = np.round(r2, 2)
mape = round(mape, 2)

print(r2, mape)
